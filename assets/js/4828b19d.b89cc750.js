"use strict";(self.webpackChunkstacklok=self.webpackChunkstacklok||[]).push([[8878],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=a.createContext({}),s=function(e){var t=a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=s(r),m=n,f=c["".concat(u,".").concat(m)]||c[m]||d[m]||l;return r?a.createElement(f,o(o({ref:t},p),{},{components:r})):a.createElement(f,o({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[c]="string"==typeof e?e:n,o[1]=i;for(var s=2;s<l;s++)o[s]=r[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},85162:(e,t,r)=>{r.d(t,{Z:()=>o});var a=r(67294),n=r(34334);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:r,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,n.Z)(l.tabItem,o),hidden:r},t)}},74866:(e,t,r)=>{r.d(t,{Z:()=>w});var a=r(87462),n=r(67294),l=r(34334),o=r(12466),i=r(16550),u=r(91980),s=r(67392),p=r(50012);function c(e){return function(e){return n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:r,attributes:a,default:n}}=e;return{value:t,label:r,attributes:a,default:n}}))}function d(e){const{values:t,children:r}=e;return(0,n.useMemo)((()=>{const e=t??c(r);return function(e){const t=(0,s.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function m(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:r}=e;const a=(0,i.k6)(),l=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,u._X)(l),(0,n.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(a.location.search);t.set(l,e),a.replace({...a.location,search:t.toString()})}),[l,a])]}function h(e){const{defaultValue:t,queryString:r=!1,groupId:a}=e,l=d(e),[o,i]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=r.find((e=>e.default))??r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l}))),[u,s]=f({queryString:r,groupId:a}),[c,h]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,l]=(0,p.Nk)(r);return[a,(0,n.useCallback)((e=>{r&&l.set(e)}),[r,l])]}({groupId:a}),b=(()=>{const e=u??c;return m({value:e,tabValues:l})?e:null})();(0,n.useLayoutEffect)((()=>{b&&i(b)}),[b]);return{selectedValue:o,selectValue:(0,n.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),s(e),h(e)}),[s,h,l]),tabValues:l}}var b=r(72389);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){let{className:t,block:r,selectedValue:i,selectValue:u,tabValues:s}=e;const p=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.o5)(),d=e=>{const t=e.currentTarget,r=p.indexOf(t),a=s[r].value;a!==i&&(c(t),u(a))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=p.indexOf(e.currentTarget)+1;t=p[r]??p[0];break}case"ArrowLeft":{const r=p.indexOf(e.currentTarget)-1;t=p[r]??p[p.length-1];break}}t?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":r},t)},s.map((e=>{let{value:t,label:r,attributes:o}=e;return n.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>p.push(e),onKeyDown:m,onClick:d},o,{className:(0,l.Z)("tabs__item",y.tabItem,o?.className,{"tabs__item--active":i===t})}),r??t)})))}function v(e){let{lazy:t,children:r,selectedValue:a}=e;const l=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===a));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function k(e){const t=h(e);return n.createElement("div",{className:(0,l.Z)("tabs-container",y.tabList)},n.createElement(g,(0,a.Z)({},e,t)),n.createElement(v,(0,a.Z)({},e,t)))}function w(e){const t=(0,b.Z)();return n.createElement(k,(0,a.Z)({key:String(t)},e))}},33479:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>u,default:()=>f,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=r(87462),n=(r(67294),r(3905)),l=r(74866),o=r(85162);const i={title:"Auto-remediation via pull request",sidebar_position:65},u="Creating a Pull Request for Autoremediation",s={unversionedId:"how-to/remediate-pullrequest",id:"how-to/remediate-pullrequest",title:"Auto-remediation via pull request",description:"Prerequisites",source:"@site/docs/how-to/remediate-pullrequest.md",sourceDirName:"how-to",slug:"/how-to/remediate-pullrequest",permalink:"/how-to/remediate-pullrequest",draft:!1,tags:[],version:"current",sidebarPosition:65,frontMatter:{title:"Auto-remediation via pull request",sidebar_position:65},sidebar:"minder",previous:{title:"Setting up a profile for auto-remediation",permalink:"/how-to/setup-autoremediation"},next:{title:"Setting up a profile for alerts",permalink:"/how-to/setup-alerts"}},p={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Create a rule type that has support for pull request auto remediation",id:"create-a-rule-type-that-has-support-for-pull-request-auto-remediation",level:2},{value:"Create a profile",id:"create-a-profile",level:2},{value:"Limitations",id:"limitations",level:2}],d={toc:c},m="wrapper";function f(e){let{components:t,...r}=e;return(0,n.kt)(m,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"creating-a-pull-request-for-autoremediation"},"Creating a Pull Request for Autoremediation"),(0,n.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("inlineCode",{parentName:"li"},"minder")," CLI application"),(0,n.kt)("li",{parentName:"ul"},"A Minder account"),(0,n.kt)("li",{parentName:"ul"},"An enrolled Provider (e.g., GitHub) and registered repositories")),(0,n.kt)("h2",{id:"create-a-rule-type-that-has-support-for-pull-request-auto-remediation"},"Create a rule type that has support for pull request auto remediation"),(0,n.kt)("p",null,"The pull request auto remediation feature provides the functionality to fix a failed rule type by creating a pull request. "),(0,n.kt)("p",null,"This feature is only available for rule types that support it. To find out if a rule type supports it, check the\n",(0,n.kt)("inlineCode",{parentName:"p"},"remediate")," section in their ",(0,n.kt)("inlineCode",{parentName:"p"},"<alert-type>.yaml")," file. It should have the ",(0,n.kt)("inlineCode",{parentName:"p"},"pull_request")," section defined like below:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"version: v1\ntype: rule-type\n...\n  remediate:\n    type: pull_request\n...\n")),(0,n.kt)("p",null,"In this example, we will use a rule type that checks if a repository has Dependabot enabled. If it's not enabled, Minder\nwill create a pull request that enables Dependabot. The rule type is called ",(0,n.kt)("inlineCode",{parentName:"p"},"dependabot_configured.yaml")," and is one of\nthe reference rule types provided by the Minder team."),(0,n.kt)("p",null,"Fetch all the reference rules by cloning the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/stacklok/minder-rules-and-profiles"},"minder-rules-and-profiles repository"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/stacklok/minder-rules-and-profiles.git\n")),(0,n.kt)("p",null,"In that directory, you can find all the reference rules and profiles."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cd minder-rules-and-profiles\n")),(0,n.kt)("p",null,"Create the ",(0,n.kt)("inlineCode",{parentName:"p"},"dependabot_configured")," rule type in Minder:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"minder ruletype create -f rule-types/github/dependabot_configured.yaml\n")),(0,n.kt)("h2",{id:"create-a-profile"},"Create a profile"),(0,n.kt)("p",null,"Next, create a profile that applies the rule to all registered repositories."),(0,n.kt)("p",null,"Create a new file called ",(0,n.kt)("inlineCode",{parentName:"p"},"profile.yaml"),"."),(0,n.kt)("p",null,"Based on your source code language, paste the following profile definition into the newly created file."),(0,n.kt)(l.Z,{mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"go",label:"Go",default:!0,mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},'---\nversion: v1\ntype: profile\nname: dependabot-profile\ncontext:\n  provider: github\nalert: "on"\nremediate: "on"\nrepository:\n  - type: dependabot_configured\n    def:\n      package_ecosystem: gomod\n      schedule_interval: weekly\n      apply_if_file: go.mod\n'))),(0,n.kt)(o.Z,{value:"npm",label:"NPM",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},'---\nversion: v1\ntype: profile\nname: dependabot-profile\ncontext:\n  provider: github\nalert: "on"\nremediate: "on"\nrepository:\n  - type: dependabot_configured\n    def:\n      package_ecosystem: npm\n      schedule_interval: weekly\n      apply_if_file: package.json\n')))),(0,n.kt)("p",null,"Create the profile in Minder:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"minder profile create -f profile.yaml\n")),(0,n.kt)("p",null,"Once the profile is created, Minder will monitor all of your registered repositories matching the expected ecosystem,\ni.e., Go, NPM, etc."),(0,n.kt)("p",null,"If a repository does not have Dependabot enabled, Minder will create a pull request with the necessary configuration\nto enable it. Alongside the pull request, Minder will also create a Security Advisory alert that will be present until the issue\nis resolved."),(0,n.kt)("p",null,"Alerts are complementary to the remediation feature. If you have both ",(0,n.kt)("inlineCode",{parentName:"p"},"alert")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"remediation")," enabled for a profile,\nMinder will attempt to remediate it first. If the remediation fails, Minder will create an alert. If the remediation\nsucceeds, Minder will close any previously opened alerts related to that rule."),(0,n.kt)("h2",{id:"limitations"},"Limitations"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The pull request auto remediation feature is only available for rule types that support it."),(0,n.kt)("li",{parentName:"ul"},"There's no support for creating pull requests that modify the content of existing files yet."),(0,n.kt)("li",{parentName:"ul"},"The created pull request should be closed manually if the issue is resolved through other means. The profile status and any related alerts will be updated/closed automatically.")))}f.isMDXComponent=!0}}]);